// Code generated by protoc-gen-go. DO NOT EDIT.
// source: classifieds.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Classified_Metadata_ContractType int32

const (
	Classified_Metadata_PHYSICAL_GOOD Classified_Metadata_ContractType = 0
	Classified_Metadata_DIGITAL_GOOD  Classified_Metadata_ContractType = 1
	Classified_Metadata_SERVICE       Classified_Metadata_ContractType = 2
	Classified_Metadata_CROWD_FUND    Classified_Metadata_ContractType = 3
)

var Classified_Metadata_ContractType_name = map[int32]string{
	0: "PHYSICAL_GOOD",
	1: "DIGITAL_GOOD",
	2: "SERVICE",
	3: "CROWD_FUND",
}
var Classified_Metadata_ContractType_value = map[string]int32{
	"PHYSICAL_GOOD": 0,
	"DIGITAL_GOOD":  1,
	"SERVICE":       2,
	"CROWD_FUND":    3,
}

func (x Classified_Metadata_ContractType) String() string {
	return proto.EnumName(Classified_Metadata_ContractType_name, int32(x))
}
func (Classified_Metadata_ContractType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 0, 0}
}

type Classified_Metadata_Format int32

const (
	Classified_Metadata_FIXED_PRICE Classified_Metadata_Format = 0
	Classified_Metadata_AUCTION     Classified_Metadata_Format = 1
)

var Classified_Metadata_Format_name = map[int32]string{
	0: "FIXED_PRICE",
	1: "AUCTION",
}
var Classified_Metadata_Format_value = map[string]int32{
	"FIXED_PRICE": 0,
	"AUCTION":     1,
}

func (x Classified_Metadata_Format) String() string {
	return proto.EnumName(Classified_Metadata_Format_name, int32(x))
}
func (Classified_Metadata_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 0, 1}
}

type Classified_ShippingOption_ShippingType int32

const (
	Classified_ShippingOption_LOCAL_PICKUP Classified_ShippingOption_ShippingType = 0
	Classified_ShippingOption_FIXED_PRICE  Classified_ShippingOption_ShippingType = 1
)

var Classified_ShippingOption_ShippingType_name = map[int32]string{
	0: "LOCAL_PICKUP",
	1: "FIXED_PRICE",
}
var Classified_ShippingOption_ShippingType_value = map[string]int32{
	"LOCAL_PICKUP": 0,
	"FIXED_PRICE":  1,
}

func (x Classified_ShippingOption_ShippingType) String() string {
	return proto.EnumName(Classified_ShippingOption_ShippingType_name, int32(x))
}
func (Classified_ShippingOption_ShippingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 2, 0}
}

type Classified struct {
	Slug               string                       `protobuf:"bytes,1,opt,name=slug" json:"slug,omitempty"`
	VendorID           *ID                          `protobuf:"bytes,2,opt,name=vendorID" json:"vendorID,omitempty"`
	Metadata           *Classified_Metadata         `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	Item               *Classified_Item             `protobuf:"bytes,4,opt,name=item" json:"item,omitempty"`
	ShippingOptions    []*Classified_ShippingOption `protobuf:"bytes,5,rep,name=shippingOptions" json:"shippingOptions,omitempty"`
	TermsAndConditions string                       `protobuf:"bytes,6,opt,name=termsAndConditions" json:"termsAndConditions,omitempty"`
	RefundPolicy       string                       `protobuf:"bytes,7,opt,name=refundPolicy" json:"refundPolicy,omitempty"`
}

func (m *Classified) Reset()                    { *m = Classified{} }
func (m *Classified) String() string            { return proto.CompactTextString(m) }
func (*Classified) ProtoMessage()               {}
func (*Classified) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Classified) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Classified) GetVendorID() *ID {
	if m != nil {
		return m.VendorID
	}
	return nil
}

func (m *Classified) GetMetadata() *Classified_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Classified) GetItem() *Classified_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Classified) GetShippingOptions() []*Classified_ShippingOption {
	if m != nil {
		return m.ShippingOptions
	}
	return nil
}

func (m *Classified) GetTermsAndConditions() string {
	if m != nil {
		return m.TermsAndConditions
	}
	return ""
}

func (m *Classified) GetRefundPolicy() string {
	if m != nil {
		return m.RefundPolicy
	}
	return ""
}

type Classified_Metadata struct {
	Version            uint32                           `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ContractType       Classified_Metadata_ContractType `protobuf:"varint,2,opt,name=contractType,enum=Classified_Metadata_ContractType" json:"contractType,omitempty"`
	Format             Classified_Metadata_Format       `protobuf:"varint,3,opt,name=format,enum=Classified_Metadata_Format" json:"format,omitempty"`
	Expiry             *google_protobuf.Timestamp       `protobuf:"bytes,4,opt,name=expiry" json:"expiry,omitempty"`
	AcceptedCurrencies []string                         `protobuf:"bytes,5,rep,name=acceptedCurrencies" json:"acceptedCurrencies,omitempty"`
	PricingCurrency    string                           `protobuf:"bytes,6,opt,name=pricingCurrency" json:"pricingCurrency,omitempty"`
	Language           string                           `protobuf:"bytes,7,opt,name=language" json:"language,omitempty"`
}

func (m *Classified_Metadata) Reset()                    { *m = Classified_Metadata{} }
func (m *Classified_Metadata) String() string            { return proto.CompactTextString(m) }
func (*Classified_Metadata) ProtoMessage()               {}
func (*Classified_Metadata) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func (m *Classified_Metadata) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Classified_Metadata) GetContractType() Classified_Metadata_ContractType {
	if m != nil {
		return m.ContractType
	}
	return Classified_Metadata_PHYSICAL_GOOD
}

func (m *Classified_Metadata) GetFormat() Classified_Metadata_Format {
	if m != nil {
		return m.Format
	}
	return Classified_Metadata_FIXED_PRICE
}

func (m *Classified_Metadata) GetExpiry() *google_protobuf.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func (m *Classified_Metadata) GetAcceptedCurrencies() []string {
	if m != nil {
		return m.AcceptedCurrencies
	}
	return nil
}

func (m *Classified_Metadata) GetPricingCurrency() string {
	if m != nil {
		return m.PricingCurrency
	}
	return ""
}

func (m *Classified_Metadata) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type Classified_Item struct {
	Title          string                   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description    string                   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ProcessingTime string                   `protobuf:"bytes,3,opt,name=processingTime" json:"processingTime,omitempty"`
	Price          uint64                   `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	Nsfw           bool                     `protobuf:"varint,5,opt,name=nsfw" json:"nsfw,omitempty"`
	Tags           []string                 `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Images         []*Classified_Item_Image `protobuf:"bytes,7,rep,name=images" json:"images,omitempty"`
	Categories     []string                 `protobuf:"bytes,8,rep,name=categories" json:"categories,omitempty"`
	Condition      string                   `protobuf:"bytes,9,opt,name=condition" json:"condition,omitempty"`
}

func (m *Classified_Item) Reset()                    { *m = Classified_Item{} }
func (m *Classified_Item) String() string            { return proto.CompactTextString(m) }
func (*Classified_Item) ProtoMessage()               {}
func (*Classified_Item) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 1} }

func (m *Classified_Item) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Classified_Item) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Classified_Item) GetProcessingTime() string {
	if m != nil {
		return m.ProcessingTime
	}
	return ""
}

func (m *Classified_Item) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Classified_Item) GetNsfw() bool {
	if m != nil {
		return m.Nsfw
	}
	return false
}

func (m *Classified_Item) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Classified_Item) GetImages() []*Classified_Item_Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Classified_Item) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Classified_Item) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

type Classified_Item_Image struct {
	Filename string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Original string `protobuf:"bytes,2,opt,name=original" json:"original,omitempty"`
	Large    string `protobuf:"bytes,3,opt,name=large" json:"large,omitempty"`
	Medium   string `protobuf:"bytes,4,opt,name=medium" json:"medium,omitempty"`
	Small    string `protobuf:"bytes,5,opt,name=small" json:"small,omitempty"`
	Tiny     string `protobuf:"bytes,6,opt,name=tiny" json:"tiny,omitempty"`
}

func (m *Classified_Item_Image) Reset()                    { *m = Classified_Item_Image{} }
func (m *Classified_Item_Image) String() string            { return proto.CompactTextString(m) }
func (*Classified_Item_Image) ProtoMessage()               {}
func (*Classified_Item_Image) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 1, 0} }

func (m *Classified_Item_Image) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Classified_Item_Image) GetOriginal() string {
	if m != nil {
		return m.Original
	}
	return ""
}

func (m *Classified_Item_Image) GetLarge() string {
	if m != nil {
		return m.Large
	}
	return ""
}

func (m *Classified_Item_Image) GetMedium() string {
	if m != nil {
		return m.Medium
	}
	return ""
}

func (m *Classified_Item_Image) GetSmall() string {
	if m != nil {
		return m.Small
	}
	return ""
}

func (m *Classified_Item_Image) GetTiny() string {
	if m != nil {
		return m.Tiny
	}
	return ""
}

type Classified_ShippingOption struct {
	Name    string                                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type    Classified_ShippingOption_ShippingType `protobuf:"varint,2,opt,name=type,enum=Classified_ShippingOption_ShippingType" json:"type,omitempty"`
	Regions []CountryCode                          `protobuf:"varint,3,rep,packed,name=regions,enum=CountryCode" json:"regions,omitempty"`
}

func (m *Classified_ShippingOption) Reset()                    { *m = Classified_ShippingOption{} }
func (m *Classified_ShippingOption) String() string            { return proto.CompactTextString(m) }
func (*Classified_ShippingOption) ProtoMessage()               {}
func (*Classified_ShippingOption) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 2} }

func (m *Classified_ShippingOption) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Classified_ShippingOption) GetType() Classified_ShippingOption_ShippingType {
	if m != nil {
		return m.Type
	}
	return Classified_ShippingOption_LOCAL_PICKUP
}

func (m *Classified_ShippingOption) GetRegions() []CountryCode {
	if m != nil {
		return m.Regions
	}
	return nil
}

type SignedClassified struct {
	Classified *Classified `protobuf:"bytes,1,opt,name=classified" json:"classified,omitempty"`
	Hash       string      `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	Signature  []byte      `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *SignedClassified) Reset()                    { *m = SignedClassified{} }
func (m *SignedClassified) String() string            { return proto.CompactTextString(m) }
func (*SignedClassified) ProtoMessage()               {}
func (*SignedClassified) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *SignedClassified) GetClassified() *Classified {
	if m != nil {
		return m.Classified
	}
	return nil
}

func (m *SignedClassified) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *SignedClassified) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*Classified)(nil), "Classified")
	proto.RegisterType((*Classified_Metadata)(nil), "Classified.Metadata")
	proto.RegisterType((*Classified_Item)(nil), "Classified.Item")
	proto.RegisterType((*Classified_Item_Image)(nil), "Classified.Item.Image")
	proto.RegisterType((*Classified_ShippingOption)(nil), "Classified.ShippingOption")
	proto.RegisterType((*SignedClassified)(nil), "SignedClassified")
	proto.RegisterEnum("Classified_Metadata_ContractType", Classified_Metadata_ContractType_name, Classified_Metadata_ContractType_value)
	proto.RegisterEnum("Classified_Metadata_Format", Classified_Metadata_Format_name, Classified_Metadata_Format_value)
	proto.RegisterEnum("Classified_ShippingOption_ShippingType", Classified_ShippingOption_ShippingType_name, Classified_ShippingOption_ShippingType_value)
}

func init() { proto.RegisterFile("classifieds.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 817 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xdb, 0x6e, 0xe3, 0x36,
	0x10, 0x8d, 0x62, 0xc7, 0x97, 0xb1, 0xd7, 0xf1, 0x12, 0x8b, 0x85, 0xe0, 0x16, 0x5d, 0xd7, 0x28,
	0x52, 0x03, 0x05, 0xb4, 0xad, 0xf7, 0xb1, 0x4f, 0xa9, 0x9c, 0x6c, 0x85, 0x6e, 0xd7, 0x06, 0x93,
	0xf4, 0xf6, 0x12, 0x30, 0x12, 0xcd, 0x10, 0x90, 0x48, 0x95, 0xa4, 0xb6, 0xf5, 0x97, 0xf4, 0x27,
	0xfa, 0x09, 0x7d, 0xec, 0xc7, 0xf4, 0x33, 0x0a, 0x52, 0x92, 0xad, 0x18, 0xde, 0x37, 0xce, 0x99,
	0xc3, 0x01, 0xe7, 0xcc, 0x19, 0xc2, 0xf3, 0x38, 0x25, 0x5a, 0xf3, 0x0d, 0xa7, 0x89, 0x0e, 0x72,
	0x25, 0x8d, 0x9c, 0x9c, 0xc7, 0x52, 0x18, 0x45, 0x62, 0x53, 0x03, 0x28, 0x96, 0x85, 0x30, 0x6a,
	0x1b, 0xcb, 0x84, 0xd6, 0xd8, 0x2b, 0x26, 0x25, 0x4b, 0xe9, 0x6b, 0x17, 0x3d, 0x14, 0x9b, 0xd7,
	0x86, 0x67, 0x54, 0x1b, 0x92, 0xe5, 0x25, 0x61, 0xf6, 0x1f, 0x00, 0x84, 0xbb, 0xda, 0x08, 0x41,
	0x5b, 0xa7, 0x05, 0xf3, 0xbd, 0xa9, 0x37, 0xef, 0x63, 0x77, 0x46, 0xaf, 0xa0, 0xf7, 0x81, 0x8a,
	0x44, 0xaa, 0x68, 0xe9, 0x9f, 0x4e, 0xbd, 0xf9, 0x60, 0xd1, 0x0a, 0xa2, 0x25, 0xde, 0x81, 0xe8,
	0x6b, 0xe8, 0x65, 0xd4, 0x90, 0x84, 0x18, 0xe2, 0xb7, 0x1c, 0xe1, 0x45, 0xb0, 0xaf, 0x19, 0xfc,
	0x58, 0xe5, 0xf0, 0x8e, 0x85, 0xbe, 0x80, 0x36, 0x37, 0x34, 0xf3, 0xdb, 0x8e, 0x3d, 0x6e, 0xb2,
	0x23, 0x43, 0x33, 0xec, 0xb2, 0x68, 0x09, 0xe7, 0xfa, 0x91, 0xe7, 0x39, 0x17, 0x6c, 0x95, 0x1b,
	0x2e, 0x85, 0xf6, 0xcf, 0xa6, 0xad, 0xf9, 0x60, 0x31, 0x69, 0x5e, 0xb8, 0x79, 0x42, 0xc1, 0x87,
	0x57, 0x50, 0x00, 0xc8, 0x50, 0x95, 0xe9, 0x4b, 0x91, 0x84, 0x52, 0x24, 0xbc, 0x2c, 0xd4, 0x71,
	0x0d, 0x1e, 0xc9, 0xa0, 0x19, 0x0c, 0x15, 0xdd, 0x14, 0x22, 0x59, 0xcb, 0x94, 0xc7, 0x5b, 0xbf,
	0xeb, 0x98, 0x4f, 0xb0, 0xc9, 0xbf, 0x2d, 0xe8, 0xd5, 0x6d, 0x21, 0x1f, 0xba, 0x1f, 0xa8, 0xd2,
	0x5c, 0x0a, 0x27, 0xdb, 0x33, 0x5c, 0x87, 0xe8, 0x0a, 0x86, 0xf5, 0x90, 0x6e, 0xb7, 0x39, 0x75,
	0xea, 0x8d, 0x16, 0x9f, 0x1f, 0x13, 0x27, 0x08, 0x1b, 0x44, 0xfc, 0xe4, 0x1a, 0x7a, 0x03, 0x9d,
	0x8d, 0x54, 0x19, 0x31, 0x4e, 0xdd, 0xd1, 0xe2, 0x93, 0xa3, 0x05, 0xae, 0x1d, 0x05, 0x57, 0x54,
	0xb4, 0x80, 0x0e, 0xfd, 0x33, 0xe7, 0x6a, 0x5b, 0x89, 0x3c, 0x09, 0x4a, 0x2b, 0x04, 0xb5, 0x15,
	0x82, 0xdb, 0xda, 0x0a, 0xb8, 0x62, 0x5a, 0xa9, 0x48, 0x1c, 0xd3, 0xdc, 0xd0, 0x24, 0x2c, 0x94,
	0xa2, 0x22, 0xe6, 0xb4, 0xd4, 0xbc, 0x8f, 0x8f, 0x64, 0xd0, 0x1c, 0xce, 0x73, 0xc5, 0x63, 0x2e,
	0x58, 0x05, 0x6e, 0x2b, 0x5d, 0x0f, 0x61, 0x34, 0x81, 0x5e, 0x4a, 0x04, 0x2b, 0x08, 0xa3, 0x95,
	0xa0, 0xbb, 0x78, 0xb6, 0x86, 0x61, 0xb3, 0x79, 0xf4, 0x1c, 0x9e, 0xad, 0xbf, 0xff, 0xf5, 0x26,
	0x0a, 0x2f, 0xdf, 0xdd, 0xbf, 0x5d, 0xad, 0x96, 0xe3, 0x13, 0x34, 0x86, 0xe1, 0x32, 0x7a, 0x1b,
	0xdd, 0xd6, 0x88, 0x87, 0x06, 0xd0, 0xbd, 0xb9, 0xc2, 0x3f, 0x45, 0xe1, 0xd5, 0xf8, 0x14, 0x8d,
	0x00, 0x42, 0xbc, 0xfa, 0x79, 0x79, 0x7f, 0x7d, 0xf7, 0x7e, 0x39, 0x6e, 0xcd, 0x2e, 0xa0, 0x53,
	0xaa, 0x81, 0xce, 0x61, 0x70, 0x1d, 0xfd, 0x72, 0xb5, 0xbc, 0x5f, 0x63, 0x4b, 0x3d, 0xb1, 0xf7,
	0x2e, 0xef, 0xc2, 0xdb, 0x68, 0xf5, 0x7e, 0xec, 0x4d, 0xfe, 0x6e, 0x41, 0xdb, 0xfa, 0x0d, 0xbd,
	0x80, 0x33, 0xc3, 0x4d, 0x4a, 0x2b, 0xdf, 0x97, 0x01, 0x9a, 0xc2, 0x20, 0xa1, 0x3a, 0x56, 0xdc,
	0x39, 0xc9, 0x4d, 0xaf, 0x8f, 0x9b, 0x10, 0xba, 0x80, 0x51, 0xae, 0x64, 0x4c, 0xb5, 0xe6, 0x82,
	0x59, 0x3d, 0xdd, 0x84, 0xfa, 0xf8, 0x00, 0xb5, 0xf5, 0xad, 0x22, 0xd4, 0xcd, 0xa2, 0x8d, 0xcb,
	0xc0, 0x2e, 0x9b, 0xd0, 0x9b, 0x3f, 0xfc, 0xb3, 0xa9, 0x37, 0xef, 0x61, 0x77, 0xb6, 0x98, 0x21,
	0xcc, 0xfa, 0xd3, 0x8a, 0xee, 0xce, 0x28, 0x80, 0x0e, 0xcf, 0x08, 0xa3, 0xda, 0xef, 0x3a, 0xfb,
	0xbf, 0x3c, 0xdc, 0x97, 0x20, 0xb2, 0x69, 0x5c, 0xb1, 0xd0, 0x67, 0x00, 0x31, 0x31, 0x94, 0x49,
	0x65, 0xc7, 0xd7, 0x73, 0x95, 0x1a, 0x08, 0xfa, 0x14, 0xfa, 0x71, 0xed, 0x77, 0xbf, 0xef, 0x1e,
	0xbc, 0x07, 0x26, 0x7f, 0x79, 0x70, 0xe6, 0xea, 0xd9, 0xa1, 0x6d, 0x78, 0x4a, 0x05, 0xc9, 0x6a,
	0x61, 0x76, 0xb1, 0xcd, 0x49, 0xc5, 0x19, 0x17, 0x24, 0xad, 0x84, 0xd9, 0xc5, 0xb6, 0xdb, 0x94,
	0x28, 0x56, 0x8b, 0x51, 0x06, 0xe8, 0x25, 0x74, 0x32, 0x9a, 0xf0, 0xa2, 0xdc, 0xfa, 0x3e, 0xae,
	0x22, 0xcb, 0xd6, 0x19, 0x49, 0x53, 0x27, 0x43, 0x1f, 0x97, 0x81, 0xd3, 0x81, 0x8b, 0xda, 0x4f,
	0xee, 0x3c, 0xf9, 0xc7, 0x83, 0xd1, 0xd3, 0x6d, 0x77, 0x12, 0xee, 0x9f, 0xe7, 0xce, 0xe8, 0x5b,
	0x68, 0x9b, 0xfd, 0xb6, 0x7d, 0xf9, 0xf1, 0xbf, 0x62, 0x17, 0xba, 0x9d, 0x73, 0x97, 0xd0, 0x05,
	0x74, 0x15, 0x65, 0xee, 0x8b, 0x68, 0x4d, 0x5b, 0xf3, 0xd1, 0x62, 0x18, 0x84, 0xe5, 0xb7, 0x1a,
	0xca, 0x84, 0xe2, 0x3a, 0x39, 0xfb, 0x06, 0x86, 0xcd, 0xdb, 0xd6, 0xa1, 0xef, 0x56, 0xd6, 0xb1,
	0xeb, 0x28, 0xfc, 0xe1, 0x6e, 0x3d, 0x3e, 0x39, 0xb4, 0x9e, 0x37, 0xfb, 0x1d, 0xc6, 0x37, 0x9c,
	0x09, 0x9a, 0x34, 0xfe, 0xdb, 0xaf, 0x00, 0xf6, 0x3f, 0xbb, 0xeb, 0x62, 0xb0, 0x18, 0x34, 0x5e,
	0x8c, 0x1b, 0x69, 0xdb, 0xec, 0x23, 0xd1, 0x8f, 0x95, 0xde, 0xee, 0x6c, 0x67, 0xa9, 0x39, 0x13,
	0xc4, 0x14, 0xaa, 0xd4, 0x7b, 0x88, 0xf7, 0xc0, 0x77, 0xed, 0xdf, 0x4e, 0xf3, 0x87, 0x87, 0x8e,
	0x5b, 0xf9, 0x37, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x21, 0x68, 0x34, 0x45, 0x06, 0x00,
	0x00,
}
